import java.util.Arrays;
import java.util.Collection;
import java.util.Comparator;
import java.util.List;
import java.util.function.Supplier;

public class MethodReferencesTest {
	
	
	public static <T ,SOURCE extends Collection<T>,DEST extends Collection<T>> DEST transferElements(SOURCE sourceCollection,Supplier<DEST> collectionFactory) {
		
		DEST result = collectionFactory.get();
		for(T t: sourceCollection)
		{
			result.add(t);
			
			
		}
		return result;
	}
	
	public static void main(String[] args) {
		
		List<Person> roster = Person.createRoster();
		for(Person p: roster)
		{
			
			
			p.printPerson();
		}
		
		Person[] rosterAsArray = roster.toArray(new Person[roster.size()]);
		
		class PersonAgeComparator implements Comparator<Person>
		{

			@Override
			public int compare(Person a, Person b) {
				// TODO Auto-generated method stub
				return a.getBirthday().compareTo(b.getBirthday());
			}
			
			
		}
		
		
		//Without method refernce
		
		Arrays.sort(rosterAsArray,new PersonAgeComparator());
		
		//With lambda expression
		
		Arrays.sort (rosterAsArray,(Person a, Person b) ->{
			
			return a.ge
		});
	}

}
